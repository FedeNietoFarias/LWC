import { createElement } from 'lwc';
import accountCreator from 'c/accountCreator';

describe('c-account-creator', () => {
    afterEach(() => {
        // The jsdom instance is shared across test cases in a single file so reset the DOM
        while (document.body.firstChild) {
            document.body.removeChild(document.body.firstChild);
        }
    });

    it('TODO: test case generated by CLI command, please fill in test logic', () => {
        const element = createElement('c-account-creator', {
            is: accountCreator
        });
        document.body.appendChild(element);
        expect(1).toBe(1);
    });
    it('renders lightning-record-form with given input values', () => {
       /* Object {
            "fieldApiName": "Name",
            "objectApiName": "Account",
          },*/
          /*var Account2 = '{"Account":[' +
          '{"fieldApiName":"Name","objectApiName":"Account" },' +
          '{"fieldApiName":"AnnualRevenue","objectApiName":"Account" },' +
          '{fieldApiName":"Industry",objectApiName":"Account" }]}';*/
          const accountName = {fieldApiName:"Name", objectApiName:"Account"};
          const accountAnnualRevenue = {fieldApiName:"AnnualRevenue", objectApiName:"Account"};
          const accountIndsutry = {fieldApiName:"Industry", objectApiName:"Account"};
          const recordFieldsAccount =[accountName,accountAnnualRevenue,accountIndsutry];

        const RECORD_FIELDS_INPUT = [
            'Name',
            'AnnualRevenue',
            'Industry'
        ];
        //const RECORD_ID_INPUT = '0031700000pJRRSAA4';
        const OBJECT_API_NAME_INPUT = 'Account';

        // Create initial element
        const element = createElement('c-account-creator', {
            is: accountCreator
        });
        // Set public properties
        //element.recordId = RECORD_ID_INPUT;
        element.objectApiName = OBJECT_API_NAME_INPUT;
        document.body.appendChild(element);

        // Validate if correct parameters have been passed to base components
        const formEl = element.shadowRoot.querySelector(
            'lightning-record-form'
        );
        expect(formEl.fields.length).toEqual(RECORD_FIELDS_INPUT.length);
        expect(formEl.fields).toEqual(recordFieldsAccount);
       //expect(formEl.recordId).toBe(RECORD_ID_INPUT);
        expect(formEl.objectApiName.objectApiName).toBe(OBJECT_API_NAME_INPUT);
    });

    /*it('is accessible', () => {
        const element = createElement('c-account-creator', {
            is: accountCreator
        });

        document.body.appendChild(element);

        return Promise.resolve().then(() => expect(element).toBeAccessible());
    });*/
});